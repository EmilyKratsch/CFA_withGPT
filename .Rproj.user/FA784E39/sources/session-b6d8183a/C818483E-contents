---
title: "Person-Centered Methods"
subtitle: "Advanced Contingency Table Analysis" 
description: "Penn State 2024"
author: 
  name: "Mark Stemmler"
  affiliation: "Friedrich-Alexander-University (FAU) Erlangen-Nuremberg"
  email: "mark.stemmler.data@gmail.com"
keywords: "Quarto, CFA, Data Analysis"
date: today
format: html
css: style.css
editor: visual
title-block-banner: "./LionImage.jpg"
title-block-banner-color: "white"
editor_options: 
  chunk_output_type: inline
---

## Table of Contents

1 What is Configural Frequency Analysis (CFA) good for?

2 Global and local Chi-square

3 Meehl’s Paradox

4 Significance Testing in CFA

5 CFA Software

## What is a configuration?

#### Situational Action Theory of Crime (SAT; P.-O. Wikström)

```{r, echo=FALSE, warning=FALSE, message=FALSE}
library(plotly)

# Define the points for the smaller 3D cube (reduced scale)
points <- matrix(c(0.25, 0.25, 0.25,
                   0.25, 0.75, 0.25,
                   0.75, 0.25, 0.25,
                   0.75, 0.75, 0.25,
                   0.25, 0.25, 0.75,
                   0.25, 0.75, 0.75,
                   0.75, 0.25, 0.75,
                   0.75, 0.75, 0.75), ncol = 3, byrow = TRUE)

# Define the lines connecting the points to form the smaller cube
edges <- list(c(1, 2), c(1, 3), c(1, 5),
              c(2, 4), c(2, 6),
              c(3, 4), c(3, 7),
              c(4, 8),
              c(5, 6), c(5, 7),
              c(6, 8),
              c(7, 8))

# Create plotly figure
fig <- plot_ly()

# Plot the edges of the smaller cube
for (edge in edges) {
    fig <- fig %>% add_trace(
        type = 'scatter3d',
        mode = 'lines',
        x = c(points[edge[1], 1], points[edge[2], 1]),
        y = c(points[edge[1], 2], points[edge[2], 2]),
        z = c(points[edge[1], 3], points[edge[2], 3]),
        line = list(color = 'black', width = 4)
    )
}

# Annotate the points with labels moved slightly away from corners
annotations <- list(
    list(x = 0.2, y = 0.2, z = 0.2, text = "E-, P-, C-", showarrow = FALSE),
    list(x = 0.8, y = 0.2, z = 0.2, text = "E+, P-, C-", showarrow = FALSE),
    list(x = 0.2, y = 0.8, z = 0.2, text = "E-, P+, C-", showarrow = FALSE),
    list(x = 0.8, y = 0.8, z = 0.2, text = "E+, P+, C-", showarrow = FALSE),
    list(x = 0.2, y = 0.2, z = 0.8, text = "E-, P-, C+", showarrow = FALSE),
    list(x = 0.8, y = 0.2, z = 0.8, text = "E+, P-, C+", showarrow = FALSE),
    list(x = 0.2, y = 0.8, z = 0.8, text = "E-, P+, C+", showarrow = FALSE),
    list(x = 0.8, y = 0.8, z = 0.8, text = "E+, P+, C+", showarrow = FALSE)
)

# Add the Criminogenic Configuration label further away with an arrow pointing to the corner
fig <- fig %>% add_trace(
    type = 'scatter3d',
    mode = 'lines+text',
    x = c(0.75, 1),
    y = c(0.75, 1),
    z = c(0.75, 1),
    line = list(color = 'blue', width = 2, dash = 'dot'),
    text = c("", "Criminogenic Configuration: P+, E+, C+<br>Propensity x (Criminogenic) Exposure => Crime<br>P x E => C"),
    textposition = "top right",
    showlegend = FALSE
)

# Set the layout of the figure with a larger axis range and smaller cube
fig <- fig %>% layout(
    scene = list(
        xaxis = list(title = 'Exposure (E)', tickvals = c(0, 1), ticktext = c('low', 'high'), range = c(0, 1)),
        yaxis = list(title = 'Propensity (P) (Morality, Control)', tickvals = c(0, 1), ticktext = c('low', 'high'), range = c(0, 1)),
        zaxis = list(title = 'Crime (C)', tickvals = c(0, 1), ticktext = c('low', 'high'), range = c(0, 1)),
        annotations = annotations
    ),
    margin = list(l = 0, r = 0, b = 0, t = 0)
)

# Show the plot
fig

# Save as html
#htmlwidgets::saveWidget(fig, "C:/Users/Emily Kratsch/Desktop/CFA/3d_cube_plot.html")


```

## What are examples for patterns or configurations?

Athletics: N = 6099 subjects from a listing of best athletes in Germany were selected and stratified according to their surname. Configuration: Among the top ranking athletes of ’heavy weight’ branches of athletics which require body strength and body height, there are relatively more persons that go by the name of ’Smith’ (German: Schmied). In the ’light weight’ branches of athletics, which are more stamina demanding, more person go by the name of ’Tailor’ (German: Schneider)(Stemmler and Bäumler, 2003).

![](CFA_Bild_dis.png){width="176"} ![](CFA_Bild_läuf.png){width="184"}

## Data Preparation and CFA Analysis in R

```{r, echo=TRUE, warning=FALSE, message=FALSE}
# Load the R-package confreq
# If you log on to RStudio, check the marks on the right
library(confreq)

# Create data for gender and vote frequency
gender <- c("males","males","females","females")
vote <- c("pro","con","pro","con")
Freq.d1 <- c(100,50,60,190)

# Combine into a data frame and set class
d1 <- data.frame(gender,vote,Freq=Freq.d1)
class(d1) <- c("data.frame", "Pfreq")

# Compute and show the CFA results
resd1 <- CFA(d1, form="~gender + vote")
summary(resd1, showall = TRUE)
```


## Example: Age and medical status

## Step 1

Edit or open a R Markdown file.

```{r, echo=TRUE}
library(confreq)
covid_1 <- read.table("SantePublic.csv", sep=";", header=TRUE, quote="\"")
covid_1
```

## Step 2

12 cells R commands to prepare the data, compute and show the CFA results class(d1) \<- c("data.frame", "Pfreq") d1

```{r, echo=TRUE}
covid_2<-dat2fre(fre2dat(covid_1,fact=TRUE))
covid_2
```

## Step 3

to start the function CFA first order CFA the results are written into the object 'result1' Age: '1=\<18', 2='18-64', 3='65-74', 4='\> 74' Status: 1='diagnosed', 2='intensive care' 3='thought disorder'

```{r, echo=TRUE}

resd1 <- CFA(covid_2,alpha=0.05, bintest = FALSE, form="~ Status + Age")
summary(resd1)
plot(resd1,type = "z.pChi",fill = c("red","green","grey"))
```

## Quarto
